#N canvas 726 91 657 378 10;
#X obj 24 308 cnv 15 400 30 empty empty OUTPUTS 20 12 0 14 -99865 -262144
0;
#X obj 24 111 cnv 15 400 30 empty empty CONTROLS 20 12 0 14 -99865
-262144 0;
#X obj 24 240 cnv 15 400 30 empty empty INPUTS 20 12 0 14 -99865 -262144
0;
#X obj 20 17 cnv 15 400 30 empty empty SR-DIV 20 12 0 14 -99865 -262144
0;
#X text 25 146 none/;
#X obj 24 170 cnv 15 400 30 empty empty PARAMETERS 20 12 0 14 -99865
-262144 0;
#X text 25 206 none/;
#X text 24 49 Divides the sample rate (or any rate passed to the rightmost
input) by either multiplying with a normalized factor between 0..1
or by dividing by an integer value. Outputs wrapped values.;
#X text 23 274 IN - 1: float normalized \, 2: int divider \, 3: int
(sample) rate;
#X obj 440 180 vp-sr-div;
#X obj 441 53 vp-normtorange 0.3 0;
#X obj 444 31 hsl 128 15 0 1 0 0 empty empty Range_from_0_to_1 -2 -8
0 10 -262144 -1 -1 7900 1;
#X floatatom 440 81 5 0 0 1 fraction - -, f 5;
#X obj 550 145 vp-sr;
#X floatatom 440 231 5 0 0 3 Rate_*_fraction - -, f 5;
#X floatatom 551 231 5 0 0 3 Rate_/_divider - -, f 5;
#X obj 473 140 i 2;
#X obj 550 93 loadbang;
#X floatatom 453 105 5 1 127 1 divider - -, f 5;
#X text 24 346 OUT - 1: int fration of rate \, 2: int divided rate
;
#X connect 9 0 14 0;
#X connect 9 1 15 0;
#X connect 10 0 12 0;
#X connect 11 0 10 0;
#X connect 12 0 9 0;
#X connect 13 0 9 2;
#X connect 16 0 9 1;
#X connect 17 0 16 0;
#X connect 17 0 13 0;
#X connect 18 0 16 0;
